#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail
set -o errtrace

if [ "$#" -ne 1 ]; then
	echo >&2 "Usage: $0 IMAGE"
	exit 1
fi
IMAGE=$1
: ${JOB_NAME=kube-moby-integration}
: ${POD_NAME_TEMPLATE=${JOB_NAME}-pod}
: ${SERVICE_ACCOUNT_NAME=kube-moby-integration}
: ${ROLE_NAME=kube-moby-integration}
: ${ROLE_BINDING_NAME=${ROLE_NAME}-binding}
COMPLETIONS=$(ls $(dirname $0)/src/entrypoints.d | wc -l)
: ${PARALLELISM=$COMPLETIONS}

out=$(dirname $0)/$(basename $0 | sed -e s/.yaml.sh/.generated.yaml/)
cat >${out} <<EOF
# autogenerated
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${SERVICE_ACCOUNT_NAME}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ${ROLE_NAME}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ${ROLE_BINDING_NAME}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${ROLE_NAME}
subjects:
- kind: ServiceAccount
  name: ${SERVICE_ACCOUNT_NAME}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${JOB_NAME}
spec:
  completions: ${COMPLETIONS}
  parallelism: ${PARALLELISM}
  template:
    metadata:
      name: ${POD_NAME_TEMPLATE}
    spec:
      serviceAccountName: ${SERVICE_ACCOUNT_NAME}
      restartPolicy: Never
      containers:
      - name: container
        image: ${IMAGE}
        securityContext:
          privileged: true
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: JOB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['job-name']
EOF
echo "generated ${out}"
